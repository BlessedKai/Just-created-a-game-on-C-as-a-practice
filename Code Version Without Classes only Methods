using System;
using System.Threading;

namespace ConsoleApp
{
    class Program
    {
        static void Main(string[] args)
        {
            Random rand = new Random();
            byte[] bebra = { 0, 1, 1 };

            byte[] Mymiss = { 0, 1, 1, 1, 1, 1, 1, 1, 1 };

            int ourHealth = 100;
            int opponentHealth = 100;

            int[] values = { 0, 1, 1, 1 };
            int randomIndex = rand.Next(values.Length); // Получаем случайный индекс от 0 до длины массива - 1
            int missChance = values[randomIndex];

            Print("Битва гладиаторов", ConsoleColor.Yellow);
            Print("Введите имя гладиатора ", ConsoleColor.Yellow);
            string name = Console.ReadLine();
            Print("Имя вашего гладиатора " + name, ConsoleColor.Yellow);
            Print("Выберите оружие", ConsoleColor.Yellow);

            Print(" 1-Цепь(урон 4-10) количество ударов за ход 1\n 2-Меч (урон 3-6) количество ударов за ход от 1 до 2 \n 3-Кастет(урон 2-3) количество ударов за ход от 1 до 4 \n После выбора оружие бой начнётся незамедлительно", ConsoleColor.Yellow);

            int enter;
            while (true)
            {
                string input = Console.ReadLine();
                if (int.TryParse(input, out enter))
                {
                    switch (enter)
                    {
                        case 1:
                            Print("Бой начнётся с цепью", ConsoleColor.Green);
                            break;
                        case 2:
                            Print("Бой начнётся с мечом", ConsoleColor.Green);
                            break;
                        case 3:
                            Print("Бой начнётся с кастетом", ConsoleColor.Green);
                            break;
                        default:
                            Print("Неверный выбор оружия", ConsoleColor.Red);
                            continue;
                    }
                    break;
                }
                else
                {
                    Print("Неверный ввод, пожалуйста, введите число", ConsoleColor.Red);
                }
            }

            Print("!!!!!!Бой начинается!!!!!!", ConsoleColor.Red);

            while (opponentHealth > 0 && ourHealth > 0)
            {
                Print("Выбор действия: \n Атака - 1 или Защита - 2 или Нажмите Esc для выхода", ConsoleColor.Yellow);
                ConsoleKeyInfo keyInfo = Console.ReadKey(); // Чтение клавиши с клавиатуры
                Print("", ConsoleColor.Black);

                if (keyInfo.Key == ConsoleKey.Escape)
                {
                    Print("ИИгра завершена.", ConsoleColor.Magenta);
                    return; // Завершаем выполнение программы
                }

                int answer;
                if (!int.TryParse(keyInfo.KeyChar.ToString(), out answer) || (answer != 1 && answer != 2))
                {
                    Print("Неправильный выбор. Пожалуйста, введите заново.", ConsoleColor.Red);
                    continue; // Переходим к следующей итерации цикла
                }

                if (answer == 1)
                {
                    AnimateAttack(); // Запускаем анимацию атаки

                    if (enter == 1)
                    {
                        int weap1 = rand.Next(4, 10);
                        int mIss = Miss(Mymiss, 1);
                        if (mIss == 0)
                        {
                            Print("Промах", ConsoleColor.Yellow);
                        }
                        else if (mIss != 0)
                        {
                            int totalOppHealth = AttackResult(opponentHealth, weap1, 1) * mIss;
                            opponentHealth = totalOppHealth;
                        }
                    }
                    else if (enter == 2)
                    {
                        int weap2 = rand.Next(3, 6);
                        int mIss = Miss(Mymiss, 1);
                        int attackRange1 = rand.Next(1, 3);
                        if (mIss == 0)
                        {
                            Print("Промах", ConsoleColor.Yellow);
                        }
                        else if (mIss != 0)
                        {
                            int totalOppHealth = AttackResult(opponentHealth, weap2, attackRange1) ;
                            opponentHealth = totalOppHealth;
                        }
                    }
                    else if (enter == 3)
                    {
                        int weap3 = rand.Next(2, 3);
                        int mIss = Miss(Mymiss, 1);
                        int attackRange2 = rand.Next(1, 5);
                        if (mIss == 0)
                        {
                            Print("Промах", ConsoleColor.Yellow);
                        }
                        else if (mIss != 0)
                        {
                            int totalOppHealth = AttackResult(opponentHealth, weap3, attackRange2) ;
                            opponentHealth = totalOppHealth;
                        }
                    }
                    int oppAttack = rand.Next(10, 20);
                    Print("Здоровье противника равно " + opponentHealth, ConsoleColor.Cyan);
                    int x = Miss(bebra, oppAttack);
                    if (x == 0)
                    {
                        Print("Противник промахнулся", ConsoleColor.Cyan);
                        Print("Здоровье " + name + " равно " + ourHealth, ConsoleColor.Yellow);
                    }
                    else if (x != 0)
                    {
                        ourHealth -= x;
                        Print("Здоровье " + name + " равно: " + ourHealth, ConsoleColor.Yellow);
                    }
                }
                else if (answer == 2)
                {
                    Print("Защита", ConsoleColor.DarkBlue);
                    GuardAttack();

                    int guarDa = rand.Next(1, 3);
                    int oppAttack = rand.Next(10, 20);
                    int x = Miss(bebra, oppAttack);
                    if (x == 0)
                    {
                        Print("Промах противника", ConsoleColor.Cyan);
                        Print("Здоровье противника равно " + opponentHealth, ConsoleColor.Black);
                        Print(name + " здоровье : " + ourHealth, ConsoleColor.Yellow);
                    }
                    else if (x != 0)
                    {
                        int totalHealth = GuardResult(ourHealth, x, guarDa);
                        ourHealth = totalHealth;

                        Print(name + " здоровье : " + ourHealth, ConsoleColor.Yellow);
                        Print("Здоровье противника равно " + opponentHealth, ConsoleColor.DarkRed);
                    }
                }
            }

            if (ourHealth <= 0)
            {
                Print(name + " проиграл.", ConsoleColor.Red);
            }
            else
            {
                Print("Противник проиграл.", ConsoleColor.Green);
            }
        }

        public static void Print(string words, ConsoleColor color)
        {
            Console.ForegroundColor = color;
            Console.WriteLine(words);
            Console.ResetColor();
        }

        public static int GuardResult(int a, int b, int c)
        {
            return (a - ((b + 1) - c));

        }
        public static int AttackResult(int x, int y, int c)
        {
            return ((x - ((y + 1) * c)));
        }
        public static int MissChance(int x, int y)
        {
            return x * y;
        }

        public static int Miss(byte[] sis, int a)
        {
            Random random = new Random(); //создаёт класс рандома 

            int x = random.Next(sis.Length);
            int y = sis[x];
            return a * y;
        }

        public static void AnimateAttack()
        {
            Console.WriteLine("Бой начинается:");

            ConsoleColor[] colors = { ConsoleColor.Red, ConsoleColor.Yellow, ConsoleColor.Green, ConsoleColor.Cyan, ConsoleColor.Magenta };

            for (int i = 0; i < 5; i++)
            {
                Console.Clear();
                Console.ForegroundColor = colors[i % colors.Length];
                Console.WriteLine("  0      0");  // символ меча (можно заменить на любой другой символ)
                Console.WriteLine(" /|\\/  \\/|\\");
                Console.WriteLine("  |      |");
                Console.WriteLine(" / \\    / \\");
                Thread.Sleep(400);
                Console.Clear();
            }

            Console.ResetColor();
            Console.WriteLine("\nАтака завершена!");
        }

        public static void GuardAttack()
        {
            ConsoleColor[] colors = { ConsoleColor.Red, ConsoleColor.Yellow, ConsoleColor.Green, ConsoleColor.Cyan, ConsoleColor.Magenta };

            for (int i = 0; i < 5; i++)
            {
                Console.Clear();
                Console.ForegroundColor = colors[i % colors.Length];
                Console.WriteLine("  0 ");  // символ меча (можно заменить на любой другой символ)
                Console.WriteLine(" /|\\) ");
                Console.WriteLine("  | ");
                Console.WriteLine(" / \\ ");
                Thread.Sleep(400);
                Console.Clear();
            }
        }
    }
}
